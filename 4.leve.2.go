package main

import (
	"fmt"
	"time"
)

//简单描述一下我如何实现功能的
//1.添加功能我是通过使用调用函数实现的，计时器的名字我开了一个全局变量来储存
//2.删除功能通过判定名字，如果相同就stop计时器
//3.取消功能，我这个取消还是有点问题的，我是把通过判定名字如过符合就给它你个false，如果false成立就不输出。
var z [500]string//一个全局变量的数组可以储存计时器名字
var mm int = 0//数组的下标
func pp(r string) {
	z[mm] = r
	mm++
}

//储存名字的函数
var rnm string

//消除功能时输入的名字
var cao string = ""
//取消功能时输入的名字
var m bool

//取消功能的bool时如过名字判定的东西，入果确定相等时，就时false就不进行输出，就时true就输出

func timer() {

	fmt.Println("timer/ticker+请给你的计时器起名ENGLISH")
	var v string
	fmt.Scanln(&v)
	l := mm + 1//这个l时表达这个计算器在数组的下标
	pp(v)//调用储存函数
	fmt.Println("请输入时间/秒")
	a := time.Second
	fmt.Scanln(&a)
	var d string
	fmt.Println("请输入内容")
	fmt.Scanln(&d)
	b := time.NewTimer(a * time.Second)
	go func() {
		for {
			<-b.C
			if m == true {
				fmt.Println(d)
			}
		}
	}()
	for {
		if rnm == v {
			b.Stop()
			z[l] = ""
		}//删除功能
		time.Sleep(5 * time.Second)
	}
}
func ticker() {
	fmt.Println("timer+请给你的计时器起名ENGLISH")
	var v string
	l := mm + 1//这个l时表达这个计算器在数组的下标
	fmt.Scanln(&v)
	pp(v)//调用储存函数
	fmt.Println("请输入时间/秒")
	a := time.Second
	fmt.Scanln(&a)
	var d string
	fmt.Println("请输入内容")
	fmt.Scanln(&d)
	b := time.NewTicker(a * time.Second)
	go func() {
		for {
			<-b.C
			fmt.Println(d)
		}
	}()
	for {
		if rnm == v {
			b.Stop()
			z[l] = ""
		}//删除功能
		m = true
		if cao == v {
			m = false
			fmt.Println("取消成功")
		}//取消功能
		time.Sleep(5 * time.Second)
	}
}
func can() {
	fmt.Println("1.添加一次响应计时器")
	fmt.Println("2.添加多次相应的计时器")
	fmt.Println("3.删除计时器")
	fmt.Println("4.取消计时器")
}

//菜单
func main() {
	fmt.Println("欢迎使用坤坤牌计时器")
	fmt.Println("请添加计算器")
	for {
		can()
		var a int
		fmt.Scanln(&a)
		switch a {
		case 1:
			go timer()
		case 2:
			go ticker()
		case 3:
			fmt.Println("请输入你要删除那个计时器")
			for q := 0; q < mm; q++ {
				fmt.Println(z[q])
			}
			fmt.Scanln(&rnm)
		case 4:
			fmt.Println("请输入你要取消第几个计时器,格式ticker+名字")
			for q := 0; q < mm; q++ {
				fmt.Println(z[q])
			}
			fmt.Scanln(&cao)
		case 0:
			return
		default:
			continue
		}



		time.Sleep(20 * time.Second)
	}
}
